@import "settings";
@import "foundation";
@import "font-awesome";
@import "ng-quick-date";
@import "nv.d3";


.#{$fa-css-prefix}-rotate-45  { @include fa-icon-rotate(45deg, 4);  }
.#{$fa-css-prefix}-rotate-135 { @include fa-icon-rotate(135deg, 5); }

.grid-frame-root {
	height: 150vh !important;
}

.bg-transparent {
	background: none !important;
}

.slideshow-slide {
	z-index: auto;
	align-items: center !important;
}

.slideshow-label {
	position: fixed;
	top: 0px;
	right: 0px;
}

.slideshow-command {
	position: absolute;
	top: 5px;
	right: 5px;
	align-items:flex-end;
	justify-content: right;
}

#slideshow-indicator {
	height: 2px;
	background-color: #aa3333;
}

canvas.rtc {
	width: 100%;
	height: 100%;
	margin: auto;
}

image.rtc {
	width: 100%;
	height: 100%;
	margin: auto;
}

video.rtc {
	width: 100%;
	height: 100%;
	margin: auto;
}

.chat {
	padding-bottom: 0.5rem;
	padding-top: 0.1rem;
	padding-right: 0.1rem;
}
.chat.sender {
	// padding-left: 0.1rem;
	font-weight: bold;
}
.chat.text {
	// padding-left: 1rem;
}

.window-top {
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	background-color: white;
	opacity: 0.9;
}

.top-space {
	top: 30px;
}

.modal-overlay.bounded {
	position: absolute !important;
	background: transparent;
	top: 0.2rem;
	left: 1rem;
}

.button.margin-0 {
	margin: 0 0 0 0;
}



@for $i from 1 through 10 {
	.stack-#{$i*10} {
		z-index: $i*10 !important;
		// background-color: lighten($gray-dark, $i*2);
	}

	.stack-#{$i*10}-fixed {
		z-index: $i*10 !important;
		position: fixed;
	}
}

@mixin grid-layout-nopadding($up) {
  flex-flow: row wrap;
  overflow: visible;
  list-style-type: none;

  > li, > div, > section {
    padding: 0.1rem 0.1rem 0.1rem;
    flex: 0 0 percentage(1 / $up);
  }
}

// device orientation depended grid block size, order, offset, and layout.
// see _grid.scss:394 _utility.scss:109
@each $orientation in (portrait, landscape) {


	@each $gorient in (horizontal, vertical) {

	  .for-#{$orientation}-#{$gorient}.grid-frame,  .for-#{$orientation}-#{$gorient}.grid-block {
	  	// display: none !important;

	    @include breakpoint($orientation) {
		  	// display: block !important;
		    // @include grid-frame($orientation: $gorient);
		    @include grid-orient($gorient);
	    }
	   }
	}

  @for $i from 1 through $total-columns {
    // Block sizing
    .hide-for-#{$orientation}-size-#{$i} {
      @include grid-size($i);
	    @include breakpoint($orientation) {
	      display: none !important;
	      &#{$block-selector} { display: flex !important; }
	    }
    }

    .for-#{$orientation}-size-#{$i} {
	     display: none !important;

	    @include breakpoint($orientation) {
        @include grid-size($i);
	      // display: block !important;
	      &#{$block-selector} { display: flex !important; }
	    }
    }

    // Source ordering
    .hide-for-#{$orientation}-order-#{$i} {
      @include grid-order($i);
	    @include breakpoint($orientation) {
	      display: none !important;
	      &#{$block-selector} { display: flex !important; }
	    }
    }

    .for-#{$orientation}-order-#{$i} {
	     display: none !important;

	    @include breakpoint($orientation) {
        @include grid-order($i);
	      // display: block !important;
	      &#{$block-selector} { display: flex !important; }
	    }
    }

    // Offsets
    .hide-for-#{$orientation}-offset-#{$i} {
      @include grid-offset($i);
	    @include breakpoint($orientation) {
	      display: none !important;
	      &#{$block-selector} { display: flex !important; }
	    }
    }

    .for-#{$orientation}-offset-#{$i} {
	     display: none !important;

	    @include breakpoint($orientation) {
        @include grid-offset($i);
	      // display: block !important;
	      &#{$block-selector} { display: flex !important; }
	    }
    }

    // Parent sizing (block grids)
    .hide-for-#{$orientation}-up-#{$i} {
      @include grid-layout-nopadding($i);
	    @include breakpoint($orientation) {
	      display: none !important;
	      &#{$block-selector} { display: flex !important; }
	    }
    }

    .for-#{$orientation}-up-#{$i} {
	     display: none !important;

	    @include breakpoint($orientation) {
        @include grid-layout-nopadding($i);
	      // display: block !important;
	      &#{$block-selector} { display: flex !important; }
	    }
    }

    // below are for testing purposes
	  @each $size in $breakpoint-classes {
      @include breakpoint($size) {
        // Block sizing
        .x-hide-for-#{$orientation}-#{$size}-#{$i} {
          @include grid-size($i);
			    @include breakpoint($orientation) {
			      display: none !important;
			      &#{$block-selector} { display: flex !important; }
			    }
        }

        .x-show-for-#{$orientation}-#{$size}-#{$i} {
			     display: none !important;

			    @include breakpoint($orientation) {
	          @include grid-size($i);
			      display: block !important;
			      &#{$block-selector} { display: flex !important; }
			    }
        }

        // Source ordering
        .x-hide-for-#{$orientation}-#{$size}-order-#{$i} {
          @include grid-order($i);
			    @include breakpoint($orientation) {
			      display: none !important;
			      &#{$block-selector} { display: flex !important; }
			    }
        }

        .x-show-for-#{$orientation}-#{$size}-order-#{$i} {
			     display: none !important;

			    @include breakpoint($orientation) {
	          @include grid-order($i);
			      display: block !important;
			      &#{$block-selector} { display: flex !important; }
			    }
        }

        // Offsets
        .x-hide-for-#{$orientation}-#{$size}-offset-#{$i} {
          @include grid-offset($i);
			    @include breakpoint($orientation) {
			      display: none !important;
			      &#{$block-selector} { display: flex !important; }
			    }
        }

        .x-show-for-#{$orientation}-#{$size}-offset-#{$i} {
			     display: none !important;

			    @include breakpoint($orientation) {
	          @include grid-offset($i);
			      display: block !important;
			      &#{$block-selector} { display: flex !important; }
			    }
        }

        // Parent sizing (block grids)
        .x-hide-for-#{$orientation}-#{$size}-up-#{$i} {
          @include grid-layout($i);
			    @include breakpoint($orientation) {
			      display: none !important;
			      &#{$block-selector} { display: flex !important; }
			    }
        }

        .x-show-for-#{$orientation}-#{$size}-up-#{$i} {
			     display: none !important;

			    @include breakpoint($orientation) {
	          @include grid-layout($i);
			      display: block !important;
			      &#{$block-selector} { display: flex !important; }
			    }
        }
      }
    }

  }
}
